server:
  port: 8443
spring:
  application:
    name: gateway-web
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8080
        port: 8080
      eager: true
    nacos:
      discovery:
        server-addr: 10.0.0.110:8848
        namespace: c0abbb1a-f8fb-4fef-8a00-c1fabc500abf
      config:
        server-addr: 10.0.0.110:8848
        namespace: c0abbb1a-f8fb-4fef-8a00-c1fabc500abf
        file-extension: json
        prefix: gateway
        shared-dataids: gateway.json
        refreshable-dataids: gateway.json
        group: java

    # 服务启动直接建立心跳连接
    eager: true
  redis:
    host: 127.0.0.1
    port: 6379
    #password: ${REDIS_PASSWORD:}
    lettuce:
      pool:
        max-active: 300
  security:
    oauth2:
      jwt:
        signingKey: 123456
nacos:
  config:
    data-id: gateway.json
    group: java
  main:
    allow-bean-definition-overriding: true

#  cloud:
#    gateway:
#      default-filters:
#        - name: Retry
#          args:
#            retries: 3
#            statuses: BAD_GATEWAY
#        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
#        - name: RequestRateLimiter
#          args:
#            redis-rate-limiter.replenishRate: 2  #流速 每秒
#            redis-rate-limiter.burstCapacity: 10   #令牌桶的容积
#            rate-limiter: "#{@defaultRedisRateLimiter}"  #SPEL表达式去的对应的bean
#            key-resolver: "#{@apiKeyResolver}" #SPEL表达式去的对应的bean
feign:
  sentinel:
    enabled: true
  okhttp:
    enabled: true
jetcache:
  statIntervalMinutes: 1
  areaInCacheName: false
  hidePackages: com.springboot.cloud
  local:
    # 默认永久本地缓存
    default:
      type: caffeine
      keyConvertor: fastjson
  remote:
    # 默认永久的远程缓存
    default:
      type: redis
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

#网关白名单，无需要签权url
gate:
  ignore:
    authentication:
      startWith: /oauth,/open,/v2/api-docs,/route/add,/bfd

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
logging:
  config: classpath:log4j2.xml